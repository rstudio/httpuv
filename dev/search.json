[{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CONTRIBUTING.html","id":"how-to-make-changes","dir":"","previous_headings":"","what":"How to make changes","title":"NA","text":"submit pull request, please following: Add entry NEWS.md concisely describing changed. appropriate, add unit tests tests/ directory. Run Build->Check Package RStudio IDE, devtools::check(), make sure change add messages, warnings, errors. things make easier httpuv development team evaluate pull request. Even , may still decide modify code even merge . Factors may prevent us merging pull request include: breaking backward compatibility adding feature consider relevant httpuv hard understand hard maintain future computationally expensive intuitive people use try responsive provide feedback case decide merge pull request.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/CONTRIBUTING.html","id":"filing-issues","dir":"","previous_headings":"","what":"Filing issues","title":"NA","text":"find bug httpuv, can also file issue. Please provide much relevant information can, include minimal reproducible example possible.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Cheng. Author. Winston Chang. Author, maintainer. Posit, PBC. Copyright holder, funder. Hector Corrada Bravo. Contributor. Jeroen Ooms. Contributor. Andrzej Krzemienski. Copyright holder.           optional.hpp libuv project contributors. Copyright holder.           libuv library, see src/libuv/AUTHORS file Joyent, Inc. Node contributors. Copyright holder.           libuv library, see src/libuv/AUTHORS file; http-parser library, see src/http-parser/AUTHORS file Niels Provos. Copyright holder.           libuv subcomponent: tree.h Internet Systems Consortium, Inc.. Copyright holder.           libuv subcomponent: inet_pton inet_ntop, contained src/libuv/src/inet.c Alexander Chemeris. Copyright holder.           libuv subcomponent: stdint-msvc2008.h (msinttypes) Google, Inc.. Copyright holder.           libuv subcomponent: pthread-fixes.c Sony Mobile Communcations AB. Copyright holder.           libuv subcomponent: pthread-fixes.c Berkeley Software Design Inc.. Copyright holder.           libuv subcomponent: android-ifaddrs.h, android-ifaddrs.c Kenneth MacKay. Copyright holder.           libuv subcomponent: android-ifaddrs.h, android-ifaddrs.c Emergya (Cloud4all, FP7/2007-2013, grant agreement 289016). Copyright holder.           libuv subcomponent: android-ifaddrs.h, android-ifaddrs.c Steve Reid. Author.           SHA-1 implementation James Brown. Author.           SHA-1 implementation Bob Trower. Author.           base64 implementation Alexander Peslyak. Author.           MD5 implementation Trantor Standard Systems. Copyright holder.           base64 implementation Igor Sysoev. Copyright holder.           http-parser","code":""},{"path":"https://rstudio.github.io/httpuv/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheng J, Chang W, Reid S, Brown J, Trower B, Peslyak (2025). httpuv: HTTP WebSocket Server Library. R package version 1.6.16.9000, https://rstudio.github.io/httpuv/.","code":"@Manual{,   title = {httpuv: HTTP and WebSocket Server Library},   author = {Joe Cheng and Winston Chang and Steve Reid and James Brown and Bob Trower and Alexander Peslyak},   year = {2025},   note = {R package version 1.6.16.9000},   url = {https://rstudio.github.io/httpuv/}, }"},{"path":"https://rstudio.github.io/httpuv/dev/index.html","id":"httpuv-http-and-websocket-server-library-for-r","dir":"","previous_headings":"","what":"HTTP and WebSocket Server Library","title":"HTTP and WebSocket Server Library","text":"httpuv provides low-level socket protocol support handling HTTP WebSocket requests directly within R. uses multithreaded architecture, /O handled one thread, R callbacks handled another. primarily intended building block packages, rather making particularly easy create complete web applications using httpuv alone. httpuv built top libuv http-parser C libraries, developed Joyent, Inc.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"HTTP and WebSocket Server Library","text":"can install stable version CRAN, development version using pak: Since httpuv contains C code, ’ll need make sure ’re set install packages compiled code. Follow instructions http://www.rstudio.com/ide/docs/packages/prerequisites httpuv may optionally built using libuv system package, can install prior installing R package. goes different names different package managers: libuv1-dev (deb), libuv-devel (rpm), libuv (brew). Version 1.43 greater required. libuv found system, built source along R package.","code":"# install from CRAN install.packages(\"httpuv\")  # or if you want to test the development version here pak::pak(\"rstudio/httpuv\")"},{"path":"https://rstudio.github.io/httpuv/dev/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"HTTP and WebSocket Server Library","text":"basic web server listens port 8080 responds HTTP requests web page containing current system time path request: Note host 0.0.0.0, listens network interfaces. host 127.0.0.1, listen connections local host. startServer() function takes app object, named list functions invoked response certain events. example , list contains function call. function invoked complete HTTP request received server, passed environment object req, contains information HTTP request. req$PATH_INFO path requested (request http://127.0.0.1:8080/foo, \"/foo\"). call function expected return list containing status, headers, body. list transformed HTTP response sent client. stop server: , stop running httpuv servers:","code":"library(httpuv)  s <- startServer(host = \"0.0.0.0\", port = 8080,   app = list(     call = function(req) {       body <- paste0(\"Time: \", Sys.time(), \"<br>Path requested: \", req$PATH_INFO)       list(         status = 200L,         headers = list('Content-Type' = 'text/html'),         body = body       )     }   ) ) s$stop() stopAllServers()"},{"path":"https://rstudio.github.io/httpuv/dev/index.html","id":"static-paths","dir":"","previous_headings":"Basic Usage","what":"Static paths","title":"HTTP and WebSocket Server Library","text":"httpuv server application can serve files disk. happens entirely within /O thread, block blocked activity main R thread. serve path, use staticPaths app. serve www/ subdirectory current directory (startServer called) root web path: default, file named index.html exists directory, served / requested. staticPaths can combined call. example, web paths /assets /lib served disk, requests paths go call function.","code":"s <- startServer(\"0.0.0.0\", 8080,   app = list(     staticPaths = list(\"/\" = \"www/\")   ) ) s <- startServer(\"0.0.0.0\", 8080,   list(     call = function(req) {       list(         status = 200L,         headers = list(           'Content-Type' = 'text/html'         ),         body = \"Hello world!\"       )     },     staticPaths = list(       \"/assets\" = \"content/assets/\",       # Don't use index.html for /lib       \"/lib\" = staticPath(\"content/lib\", indexhtml = FALSE)     )   ) )"},{"path":"https://rstudio.github.io/httpuv/dev/index.html","id":"websocket-server","dir":"","previous_headings":"Basic Usage","what":"WebSocket server","title":"HTTP and WebSocket Server Library","text":"httpuv also can handle WebSocket connections. example, app acts WebSocket echo server: test , can connect using websocket package (provides WebSocket client). can R process different one. Note httpuv websocket packages provide class named WebSocket; however, httpuv, class acts server, websocket, acts client. also different APIs. information WebSocket client package, see project page.","code":"s <- startServer(\"127.0.0.1\", 8080,   list(     onWSOpen = function(ws) {       # The ws object is a WebSocket object       cat(\"Server connection opened.\\n\")        ws$onMessage(function(binary, message) {         cat(\"Server received message:\", message, \"\\n\")         ws$send(message)       })       ws$onClose(function() {         cat(\"Server connection closed.\\n\")       })     }   ) ) ws <- websocket::WebSocket$new(\"ws://127.0.0.1:8080/\") ws$onMessage(function(event) {   cat(\"Client received message:\", event$data, \"\\n\") })  # Wait for a moment before running next line ws$send(\"hello world\")  # Close client ws$close()"},{"path":"https://rstudio.github.io/httpuv/dev/index.html","id":"debugging-builds","dir":"","previous_headings":"","what":"Debugging builds","title":"HTTP and WebSocket Server Library","text":"httpuv can built debugging options enabled. can done uncommenting lines src/Makevars, installing. first one enables thread assertions, ensure code running correct thread; . second one enables tracing statements: httpuv print lots messages various events occur. install directly GitHub options, can use with_makevars, like : © 2013-2020 RStudio, Inc.","code":"PKG_CPPFLAGS += -DDEBUG_THREAD -UNDEBUG PKG_CPPFLAGS += -DDEBUG_TRACE withr::with_makevars(   c(PKG_CPPFLAGS=\"-DDEBUG_TRACE -DDEBUG_THREAD -UNDEBUG\"), {     devtools::install_github(\"rstudio/httpuv\")   }, assignment = \"+=\" )"},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeServer class — PipeServer","title":"PipeServer class — PipeServer","text":"class represents server running one application listens named pipe.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeServer class — PipeServer","text":"httpuv::Server -> PipeServer","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeServer class — PipeServer","text":"httpuv::Server$getStaticPathOptions() httpuv::Server$getStaticPaths() httpuv::Server$isRunning() httpuv::Server$removeStaticPath() httpuv::Server$setStaticPath() httpuv::Server$setStaticPathOption() httpuv::Server$stop()","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeServer class — PipeServer","text":"PipeServer$new() PipeServer$getName() PipeServer$getMask()","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeServer class — PipeServer","text":"Initialize new PipeServer object Create new PipeServer object. app httpuv application object described startServer().","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeServer class — PipeServer","text":"","code":"PipeServer$new(name, mask, app, quiet = FALSE)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeServer class — PipeServer","text":"name name named pipe bind server . mask mask named pipe. NULL, defaults -1. app httpuv application object described startServer(). quiet TRUE, suppresses output server.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PipeServer class — PipeServer","text":"new PipeServer object.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeServer class — PipeServer","text":"","code":"\\dontrun{ # Create a simple app app <- function(req) {   list(     status = 200L,     headers = list('Content-Type' = 'text/plain'),     body = \"Hello, world!\"   ) } # Create a server server <- PipeServer$new(\"my_pipe\", -1, app) }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"method-getname-","dir":"Reference","previous_headings":"","what":"Method getName()","title":"PipeServer class — PipeServer","text":"Get name named pipe","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeServer class — PipeServer","text":"","code":"PipeServer$getName()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PipeServer class — PipeServer","text":"name named pipe server bound .","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"method-getmask-","dir":"Reference","previous_headings":"","what":"Method getMask()","title":"PipeServer class — PipeServer","text":"Get mask named pipe","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeServer class — PipeServer","text":"","code":"PipeServer$getMask()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"PipeServer class — PipeServer","text":"mask named pipe server bound .","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/PipeServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeServer class — PipeServer","text":"","code":"## ------------------------------------------------ ## Method `PipeServer$new` ## ------------------------------------------------  if (FALSE) { # \\dontrun{ # Create a simple app app <- function(req) {   list(     status = 200L,     headers = list('Content-Type' = 'text/plain'),     body = \"Hello, world!\"   ) } # Create a server server <- PipeServer$new(\"my_pipe\", -1, app) } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server class — Server","title":"Server class — Server","text":"Server class parent class WebServer() PipeServer(). class defines interface meant instantiated.","code":""},{"path":[]},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Server class — Server","text":"Server$stop() Server$isRunning() Server$getStaticPaths() Server$setStaticPath() Server$removeStaticPath() Server$getStaticPathOptions() Server$setStaticPathOption()","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-stop-","dir":"Reference","previous_headings":"","what":"Method stop()","title":"Server class — Server","text":"Stop running server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$stop()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-isrunning-","dir":"Reference","previous_headings":"","what":"Method isRunning()","title":"Server class — Server","text":"Check server running","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$isRunning()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Server class — Server","text":"TRUE server running, FALSE otherwise.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-getstaticpaths-","dir":"Reference","previous_headings":"","what":"Method getStaticPaths()","title":"Server class — Server","text":"Get static paths server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$getStaticPaths()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Server class — Server","text":"list staticPath() objects.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-setstaticpath-","dir":"Reference","previous_headings":"","what":"Method setStaticPath()","title":"Server class — Server","text":"Set static path server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$setStaticPath(..., .list = NULL)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server class — Server","text":"... Named arguments name name static path value path directory serve. already exists static path name, replaced. .list named list name name static path value path directory serve. already exists static path name, replaced.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server class — Server","text":"","code":"\\dontrun{ # Create a server server <- WebServer$new(\"127.0.0.1\", 8080, app = my_app) #' # Set a static path server$setStaticPath(   staticPath1 = \"path/to/static/files\",   staticPath2 = \"another/path/to/static/files\" ) }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-removestaticpath-","dir":"Reference","previous_headings":"","what":"Method removeStaticPath()","title":"Server class — Server","text":"Remove static path","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$removeStaticPath(path)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server class — Server","text":"path name static path remove.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Server class — Server","text":"invisible NULL server running, otherwise nothing.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Server class — Server","text":"","code":"\\dontrun{ # Create a server server <- WebServer$new(\"127.0.0.1\", 8080, app = my_app) # Set a static path server$setStaticPath(   staticPath1 = \"path/to/static/files\",   staticPath2 = \"another/path/to/static/files\" ) # Remove a static path server$removeStaticPath(\"staticPath1\") }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-getstaticpathoptions-","dir":"Reference","previous_headings":"","what":"Method getStaticPathOptions()","title":"Server class — Server","text":"Get static path options server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$getStaticPathOptions()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Server class — Server","text":"list default staticPathOptions current server. static path use options default, can overridden static path.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"method-setstaticpathoption-","dir":"Reference","previous_headings":"","what":"Method setStaticPathOption()","title":"Server class — Server","text":"Set one static path options","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Server class — Server","text":"","code":"Server$setStaticPathOption(..., .list = NULL)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server class — Server","text":"... Named arguments name name static path option value value set option. .list named list name name static path option value value set option.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Server class — Server","text":"invisible NULL server running, otherwise nothing.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/Server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server class — Server","text":"","code":"## ------------------------------------------------ ## Method `Server$setStaticPath` ## ------------------------------------------------  if (FALSE) { # \\dontrun{ # Create a server server <- WebServer$new(\"127.0.0.1\", 8080, app = my_app) #' # Set a static path server$setStaticPath(   staticPath1 = \"path/to/static/files\",   staticPath2 = \"another/path/to/static/files\" ) } # }  ## ------------------------------------------------ ## Method `Server$removeStaticPath` ## ------------------------------------------------  if (FALSE) { # \\dontrun{ # Create a server server <- WebServer$new(\"127.0.0.1\", 8080, app = my_app) # Set a static path server$setStaticPath(   staticPath1 = \"path/to/static/files\",   staticPath2 = \"another/path/to/static/files\" ) # Remove a static path server$removeStaticPath(\"staticPath1\") } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":null,"dir":"Reference","previous_headings":"","what":"WebServer class — WebServer","title":"WebServer class — WebServer","text":"class represents web server running one application. Multiple servers can running time.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WebServer class — WebServer","text":"httpuv::Server -> WebServer","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WebServer class — WebServer","text":"httpuv::Server$getStaticPathOptions() httpuv::Server$getStaticPaths() httpuv::Server$isRunning() httpuv::Server$removeStaticPath() httpuv::Server$setStaticPath() httpuv::Server$setStaticPathOption() httpuv::Server$stop()","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WebServer class — WebServer","text":"WebServer$new() WebServer$getHost() WebServer$getPort()","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"WebServer class — WebServer","text":"Initialize new WebServer object Create new WebServer object. app httpuv application object described startServer().","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WebServer class — WebServer","text":"","code":"WebServer$new(host, port, app, quiet = FALSE)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebServer class — WebServer","text":"host host name IP address bind server . port port number bind server . app httpuv application object described startServer(). quiet TRUE, suppresses output server.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WebServer class — WebServer","text":"new WebServer object.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WebServer class — WebServer","text":"","code":"\\dontrun{ # Create a simple app app <- function(req) {   list(     status = 200L,     headers = list('Content-Type' = 'text/plain'),     body = \"Hello, world!\"   ) } # Create a server server <- WebServer$new(\"127.0.0.1\", 8080, app) }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"method-gethost-","dir":"Reference","previous_headings":"","what":"Method getHost()","title":"WebServer class — WebServer","text":"Get host name IP address server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WebServer class — WebServer","text":"","code":"WebServer$getHost()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"WebServer class — WebServer","text":"host name IP address server bound .","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"method-getport-","dir":"Reference","previous_headings":"","what":"Method getPort()","title":"WebServer class — WebServer","text":"Get port number server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WebServer class — WebServer","text":"","code":"WebServer$getPort()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"WebServer class — WebServer","text":"port number server bound .","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WebServer class — WebServer","text":"","code":"## ------------------------------------------------ ## Method `WebServer$new` ## ------------------------------------------------  if (FALSE) { # \\dontrun{ # Create a simple app app <- function(req) {   list(     status = 200L,     headers = list('Content-Type' = 'text/plain'),     body = \"Hello, world!\"   ) } # Create a server server <- WebServer$new(\"127.0.0.1\", 8080, app) } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":null,"dir":"Reference","previous_headings":"","what":"WebSocket class — WebSocket","title":"WebSocket class — WebSocket","text":"WebSocket object represents single WebSocket connection. object can used send messages close connection, receive notifications messages received connection closed.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WebSocket class — WebSocket","text":"Note WebSocket class different one provided package named websocket. class meant used server side, whereas one websocket package used client. WebSocket class httpuv older API one websocket package. WebSocket objects never created directly. obtained passing onWSOpen function startServer().","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"WebSocket class — WebSocket","text":"handle server handle messageCallbacks list callback functions invoked message received connection. closeCallbacks list callback functions invoked connection closed. request Rook request environment opened connection. can used inspect HTTP headers, example.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WebSocket class — WebSocket","text":"WebSocket$new() WebSocket$onMessage() WebSocket$onClose() WebSocket$send() WebSocket$close() WebSocket$clone()","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"WebSocket class — WebSocket","text":"Initializes new WebSocket object.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WebSocket class — WebSocket","text":"","code":"WebSocket$new(handle, req)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebSocket class — WebSocket","text":"handle C++ WebSocket handle. req Rook request environment opened connection.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"method-onmessage-","dir":"Reference","previous_headings":"","what":"Method onMessage()","title":"WebSocket class — WebSocket","text":"Registers callback function invoked whenever message received connection.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WebSocket class — WebSocket","text":"","code":"WebSocket$onMessage(func)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebSocket class — WebSocket","text":"func callback function registered. callback function invoked two arguments. first argument TRUE message binary FALSE text. second argument either raw vector (message binary) character vector.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"method-onclose-","dir":"Reference","previous_headings":"","what":"Method onClose()","title":"WebSocket class — WebSocket","text":"Registers callback function invoked connection closed.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WebSocket class — WebSocket","text":"","code":"WebSocket$onClose(func)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebSocket class — WebSocket","text":"func callback function registered.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"method-send-","dir":"Reference","previous_headings":"","what":"Method send()","title":"WebSocket class — WebSocket","text":"Begins sending given message websocket.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"WebSocket class — WebSocket","text":"","code":"WebSocket$send(message)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebSocket class — WebSocket","text":"message Either raw vector, single-element character vector encoded UTF-8.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"WebSocket class — WebSocket","text":"Closes websocket connection","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"WebSocket class — WebSocket","text":"","code":"WebSocket$close(code = 1000L, reason = \"\")"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebSocket class — WebSocket","text":"code integer indicates WebSocket close code. reason concise human-readable prose explanation closure.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WebSocket class — WebSocket","text":"objects class cloneable method.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"WebSocket class — WebSocket","text":"","code":"WebSocket$clone(deep = FALSE)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebSocket class — WebSocket","text":"deep Whether make deep clone.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/WebSocket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WebSocket class — WebSocket","text":"","code":"if (FALSE) { # \\dontrun{ # A WebSocket echo server that listens on port 8080 startServer(\"0.0.0.0\", 8080,   list(     onHeaders = function(req) {       # Print connection headers       cat(capture.output(str(as.list(req))), sep = \"\\n\")     },     onWSOpen = function(ws) {       cat(\"Connection opened.\\n\")        ws$onMessage(function(binary, message) {         cat(\"Server received message:\", message, \"\\n\")         ws$send(message)       })       ws$onClose(function() {         cat(\"Connection closed.\\n\")       })      }   ) ) } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/as.staticPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to a staticPath object — as.staticPath","title":"Convert an object to a staticPath object — as.staticPath","text":"function used convert object staticPath object. primarily used internally, can also used users ensure object staticPath object.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/as.staticPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to a staticPath object — as.staticPath","text":"","code":"as.staticPath(path)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/as.staticPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to a staticPath object — as.staticPath","text":"path object convert.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/encodeURI.html","id":null,"dir":"Reference","previous_headings":"","what":"URI encoding/decoding — encodeURI","title":"URI encoding/decoding — encodeURI","text":"Encodes/decodes strings using URI encoding/decoding way web browsers . precise behaviors functions can found developer.mozilla.org: encodeURI, encodeURIComponent, decodeURI, decodeURIComponent","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/encodeURI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URI encoding/decoding — encodeURI","text":"","code":"encodeURI(value)  encodeURIComponent(value)  decodeURI(value)  decodeURIComponent(value)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/encodeURI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URI encoding/decoding — encodeURI","text":"value Character vector encoded decoded.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/encodeURI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URI encoding/decoding — encodeURI","text":"Encoded decoded character vector length input value. decodeURI decodeURIComponent return strings UTF-8 encoded.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/encodeURI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"URI encoding/decoding — encodeURI","text":"Intended faster replacement utils::URLencode() utils::URLdecode(). encodeURI differs encodeURIComponent former encode reserved characters: ;,/?:@&=+$ decodeURI differs decodeURIComponent refuse decode encoded sequences decode reserved character. (doubt, use decodeURIComponent.) encodeURI encodeURIComponent, input strings converted UTF-8 URL-encoding.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/getRNGState.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the value of .Random.seed to R's internal RNG state — getRNGState","title":"Apply the value of .Random.seed to R's internal RNG state — getRNGState","text":"function needed unusual cases C++ function calls R function sets value .Random.seed. function called end R function ensure new value .Random.seed preserved. Otherwise, Rcpp may overwrite previous value.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/getRNGState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the value of .Random.seed to R's internal RNG state — getRNGState","text":"","code":"getRNGState()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/httpuv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"HTTP and WebSocket server — httpuv-package","title":"HTTP and WebSocket server — httpuv-package","text":"HTTP WebSocket server","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/httpuv-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HTTP and WebSocket server — httpuv-package","text":"Allows R code listen interact HTTP WebSocket clients, can serve web traffic directly R process. Implementation based libuv http-parser. low-level library provides little network /O implementations HTTP WebSocket protocols. easy way create web applications, try Shiny instead.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/httpuv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"HTTP and WebSocket server — httpuv-package","text":"Joe Cheng joe@rstudio.com","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/httpuv-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HTTP and WebSocket server — httpuv-package","text":"","code":"if (FALSE) { # \\dontrun{ demo(\"echo\", package=\"httpuv\") } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/interrupt.html","id":null,"dir":"Reference","previous_headings":"","what":"Interrupt httpuv runloop — interrupt","title":"Interrupt httpuv runloop — interrupt","text":"Interrupts currently running httpuv runloop, meaning runServer() service() return control back caller tasks processed methods called . Note may cause -process uploads downloads interrupted mid-request.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/interrupt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interrupt httpuv runloop — interrupt","text":"","code":"interrupt()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/ipFamily.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an address is IPv4 or IPv6 — ipFamily","title":"Check whether an address is IPv4 or IPv6 — ipFamily","text":"Given IP address, checks whether IPv4 IPv6 address.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/ipFamily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an address is IPv4 or IPv6 — ipFamily","text":"","code":"ipFamily(ip)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/ipFamily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an address is IPv4 or IPv6 — ipFamily","text":"ip single string representing IP address.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/ipFamily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an address is IPv4 or IPv6 — ipFamily","text":"IPv4 addresses, 4; IPv6 addresses, 6. address neither, -1.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/ipFamily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an address is IPv4 or IPv6 — ipFamily","text":"","code":"ipFamily(\"127.0.0.1\")   # 4 #> [1] 4 ipFamily(\"500.0.0.500\") # -1 #> [1] -1 ipFamily(\"500.0.0.500\") # -1 #> [1] -1  ipFamily(\"::\")          # 6 #> [1] 6 ipFamily(\"::1\")         # 6 #> [1] 6 ipFamily(\"fe80::1ff:fe23:4567:890a\") # 6 #> [1] 6"},{"path":"https://rstudio.github.io/httpuv/dev/reference/listServers.html","id":null,"dir":"Reference","previous_headings":"","what":"List all running httpuv servers — listServers","title":"List all running httpuv servers — listServers","text":"returns list running httpuv server applications.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/listServers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all running httpuv servers — listServers","text":"","code":"listServers()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/logLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set logging level — logLevel","title":"Get and set logging level — logLevel","text":"logging level httpuv can set report differing levels information. Possible logging levels (least information reported) : \"\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\". default level ERROR.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/logLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set logging level — logLevel","text":"","code":"logLevel(level = NULL)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/logLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set logging level — logLevel","text":"level logging level. Must one NULL, \"\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\". NULL (default), function simply returns current logging level.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/logLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set logging level — logLevel","text":"level=NULL, returns current logging level. level value, returns previous logging level, set new value.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/randomPort.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an open TCP port — randomPort","title":"Find an open TCP port — randomPort","text":"Finds random available TCP port listening , within specified range ports. default range ports check 1024 49151, set TCP User Ports. function automatically excludes ports considered unsafe web browsers.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/randomPort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an open TCP port — randomPort","text":"","code":"randomPort(min = 1024L, max = 49151L, host = \"127.0.0.1\", n = 20)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/randomPort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an open TCP port — randomPort","text":"min Minimum port number. max Maximum port number. host string valid IPv4 IPv6 address owned server, application listen . \"0.0.0.0\" represents IPv4 addresses \"::/0\" represents IPv6 addresses. n Number ports try giving .","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/randomPort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find an open TCP port — randomPort","text":"port available listen .","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/randomPort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find an open TCP port — randomPort","text":"","code":"if (FALSE) { # \\dontrun{ s <- startServer(\"127.0.0.1\", randomPort(), list()) browseURL(paste0(\"http://127.0.0.1:\", s$getPort()))  s$stop() } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/rawToBase64.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw vector to Base64-encoded string — rawToBase64","title":"Convert raw vector to Base64-encoded string — rawToBase64","text":"Converts raw vector Base64 encoding single-element character vector.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/rawToBase64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw vector to Base64-encoded string — rawToBase64","text":"","code":"rawToBase64(x)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/rawToBase64.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw vector to Base64-encoded string — rawToBase64","text":"x raw vector.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/rawToBase64.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert raw vector to Base64-encoded string — rawToBase64","text":"","code":"set.seed(100) result <- rawToBase64(as.raw(runif(19, min=0, max=256))) stopifnot(identical(result, \"TkGNDnd7z16LK5/hR2bDqzRbXA==\"))"},{"path":"https://rstudio.github.io/httpuv/dev/reference/runServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a server — runServer","title":"Run a server — runServer","text":"convenience function provides simple way call startServer(), service(), stopServer() correct sequence. return unless interrupted error occurs.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/runServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a server — runServer","text":"","code":"runServer(host, port, app, interruptIntervalMs = NULL)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/runServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a server — runServer","text":"host string valid IPv4 IPv6 address owned server, application listen . \"0.0.0.0\" represents IPv4 addresses \"::/0\" represents IPv6 addresses. port number integer indicates server port listened . Note Unix-like systems including Linux macOS, port numbers smaller 1024 require root privileges. app collection functions define application. See startServer(). interruptIntervalMs Deprecated (last used httpuv 1.3.5).","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/runServer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a server — runServer","text":"multiple hosts /ports listen , call individual functions instead runServer.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/runServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a server — runServer","text":"","code":"if (FALSE) { # \\dontrun{ # A very basic application runServer(\"0.0.0.0\", 5000,   list(     call = function(req) {       list(         status = 200L,         headers = list(           'Content-Type' = 'text/html'         ),         body = \"Hello world!\"       )     }   ) ) } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/runStaticServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve a directory — runStaticServer","title":"Serve a directory — runStaticServer","text":"runStaticServer() provides convenient interface start server host single static directory, either foreground background.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/runStaticServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve a directory — runStaticServer","text":"","code":"runStaticServer(   dir = getwd(),   host = \"127.0.0.1\",   port = NULL,   ...,   background = FALSE,   browse = interactive() )"},{"path":"https://rstudio.github.io/httpuv/dev/reference/runStaticServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve a directory — runStaticServer","text":"dir directory serve. Defaults current working directory. host string valid IPv4 address owned server, \"0.0.0.0\" listen IP addresses. port number integer indicates server port listened . Note Unix-like systems including Linux macOS, port numbers smaller 1024 require root privileges. ... Arguments passed staticPath path local path. indexhtml index.html file present, served client requests static path subdirectory? fallthrough default value, FALSE, request made file exist, httpuv immediately send 404 response background /O thread, without needing call back main R thread. offers best performance. value TRUE, instead sending 404 response, httpuv call application's call function, allow handle request. html_charset HTML files served, value provided charset Content-Type header. example, default value, \"utf-8\", header Content-Type: text/html; charset=utf-8. \"\" used, charset added Content-Type header. headers Additional headers values included response. validation optional validation pattern. Presently, type validation supported exact string match header. example, validation '\"abc\" = \"xyz\"', HTTP requests must header named abc (case-insensitive) value xyz (case-sensitive). request matching header, httpuv give 403 Forbidden response. character(0) (default), validation check performed. background Whether run server background. default, server runs foreground blocks R console. can stop server interrupting Ctrl + C. background = TRUE, server run background process requests R console idle. stop background server, call stopAllServers() call stopServer() server object returned (invisibly) function. browse Whether automatically open served directory web browser. Defaults TRUE running interactively.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/runStaticServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serve a directory — runStaticServer","text":"Starts server specified host port. default server runs foreground accessible http://127.0.0.1:7446. background = TRUE, server object returned invisibly.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/runStaticServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serve a directory — runStaticServer","text":"","code":"if (FALSE) { # interactive() website_dir <- system.file(\"example-static-site\", package = \"httpuv\") runStaticServer(dir = website_dir) }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/service.html","id":null,"dir":"Reference","previous_headings":"","what":"Process requests — service","title":"Process requests — service","text":"Process HTTP requests WebSocket messages. nothing R's call stack – R sitting idle command prompt – necessary call function, requests handled automatically. However, R executing code, requests handled either call stack empty, function called (alternatively, later::run_now() called).","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/service.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process requests — service","text":"","code":"service(timeoutMs = ifelse(interactive(), 100, 1000))"},{"path":"https://rstudio.github.io/httpuv/dev/reference/service.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process requests — service","text":"timeoutMs Approximate number milliseconds run returning. return duration elapsed. 0 Inf, function continually process requests without returning unless error occurs. NA, performs non-blocking run without waiting.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/service.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process requests — service","text":"previous versions httpuv (1.3.5 ), even server created startServer() exists, requests serviced unless service called. function simply calls later::run_now(), application schedules later::later() callbacks, invoked.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/service.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process requests — service","text":"","code":"if (FALSE) { # \\dontrun{ while (TRUE) {   service() } } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/startDaemonizedServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTTP/WebSocket daemonized server (deprecated) — startDaemonizedServer","title":"Create an HTTP/WebSocket daemonized server (deprecated) — startDaemonizedServer","text":"function removed future release httpuv. simply wrapper startServer(). previous versions httpuv (1.3.5 ), startServer ran applications foreground startDaemonizedServer ran applications background, now run applications background.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/startDaemonizedServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTTP/WebSocket daemonized server (deprecated) — startDaemonizedServer","text":"","code":"startDaemonizedServer(host, port, app, quiet = FALSE)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/startDaemonizedServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTTP/WebSocket daemonized server (deprecated) — startDaemonizedServer","text":"host string valid IPv4 address owned server, \"0.0.0.0\" listen IP addresses. port number integer indicates server port listened . Note Unix-like systems including Linux macOS, port numbers smaller 1024 require root privileges. app collection functions define application. See Details. quiet TRUE, suppress error messages starting app.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTTP/WebSocket server — startServer","title":"Create an HTTP/WebSocket server — startServer","text":"Creates HTTP/WebSocket server specified host port.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTTP/WebSocket server — startServer","text":"","code":"startServer(host, port, app, quiet = FALSE)  startPipeServer(name, mask, app, quiet = FALSE)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTTP/WebSocket server — startServer","text":"host string valid IPv4 address owned server, \"0.0.0.0\" listen IP addresses. port number integer indicates server port listened . Note Unix-like systems including Linux macOS, port numbers smaller 1024 require root privileges. app collection functions define application. See Details. quiet TRUE, suppress error messages starting app. name string indicates path domain socket (Unix-like systems) name named pipe (Windows). mask non-NULL non-negative, numeric value used temporarily modify process's umask domain socket created. ensure root can access domain socket, use strtoi(\"777\", 8); allow owner group read/write access, use strtoi(\"117\", 8). value NULL process's umask left unchanged. (parameter effect Windows.)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an HTTP/WebSocket server — startServer","text":"handle server can passed stopServer() shut server . WebServer() PipeServer() object.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an HTTP/WebSocket server — startServer","text":"startServer binds specified port listens connections thread running background. background thread handles /O, receives HTTP request, schedule call user-defined R functions app handle request. scheduling done later::later(). R call stack empty – words, interactive R session sitting idle command prompt – R automatically run scheduled calls. However, call stack empty – R evaluating R code – callbacks execute either call stack empty, later::run_now() function called. function tells R execute callbacks scheduled later::later(). service() function essentially wrapper later::run_now(). older versions httpuv (1.3.5 ), use background thread /O, function called, accept connections immediately. necessary call service() repeatedly order actually accept handle connections. port bound (likely due permissions already bound), error raised. application can also specify paths filesystem served background thread, without invoking $call() $onHeaders(). Files served way use C++ code, faster going R, blocked R code executing. can greatly improve performance serving static assets. app parameter application logic provided server. can list, environment, reference class contains following methods fields: call(req) Process given HTTP request, return HTTP response (see Response Values). method implemented accordance Rook specification. Note httpuv augments req additional item, req$HEADERS, named character vector request headers. onHeaders(req) Optional. Similar call, occurs headers received. Return NULL continue normal processing request, Rook response send response, stop processing request, ask client close connection. (can used implement upload size limits, example.) onWSOpen(ws) Called back WebSocket connection established. given object can used notified message received client, send messages client, etc. See WebSocket(). staticPaths named list paths served without invoking call() onHeaders. name one URL path, value either string referring local path, object created staticPath() function. staticPathOptions set default options use serving static paths. set NULL, use result calling staticPathOptions() arguments. startPipeServer variant can used instead startServer listen Unix domain socket named pipe rather TCP socket (common).","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":"response-values","dir":"Reference","previous_headings":"","what":"Response Values","title":"Create an HTTP/WebSocket server — startServer","text":"call function expected return list containing following, converted HTTP response sent client: status numeric HTTP status code, e.g. 200 404L. headers named list HTTP headers values, strings. can also missing, empty list, NULL, case headers (Date Content-Length headers, required) added. body string (raw vector) sent body HTTP response. can also omitted set NULL avoid sending body, useful HTTP 1xx, 204, 304 responses, well responses HEAD requests.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/startServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HTTP/WebSocket server — startServer","text":"","code":"if (FALSE) { # \\dontrun{ # A very basic application s <- startServer(\"0.0.0.0\", 5000,   list(     call = function(req) {       list(         status = 200L,         headers = list(           'Content-Type' = 'text/html'         ),         body = \"Hello world!\"       )     }   ) )  s$stop()   # An application that serves static assets at the URL paths /assets and /lib s <- startServer(\"0.0.0.0\", 5000,   list(     call = function(req) {       list(         status = 200L,         headers = list(           'Content-Type' = 'text/html'         ),         body = \"Hello world!\"       )     },     staticPaths = list(       \"/assets\" = \"content/assets/\",       \"/lib\" = staticPath(         \"content/lib\",         indexhtml = FALSE       ),       # This subdirectory of /lib should always be handled by the R code path       \"/lib/dynamic\" = excludeStaticPath()     ),     staticPathOptions = staticPathOptions(       indexhtml = TRUE     )   ) )  s$stop() } # }"},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a staticPath object — staticPath","title":"Create a staticPath object — staticPath","text":"staticPath function creates staticPath object. Note arguments (path) NULL, means particular static path, inherit behavior staticPathOptions set application whole.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a staticPath object — staticPath","text":"","code":"staticPath(   path,   indexhtml = NULL,   fallthrough = NULL,   html_charset = NULL,   headers = NULL,   validation = NULL )  excludeStaticPath()"},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a staticPath object — staticPath","text":"path local path. indexhtml index.html file present, served client requests static path subdirectory? fallthrough default value, FALSE, request made file exist, httpuv immediately send 404 response background /O thread, without needing call back main R thread. offers best performance. value TRUE, instead sending 404 response, httpuv call application's call function, allow handle request. html_charset HTML files served, value provided charset Content-Type header. example, default value, \"utf-8\", header Content-Type: text/html; charset=utf-8. \"\" used, charset added Content-Type header. headers Additional headers values included response. validation optional validation pattern. Presently, type validation supported exact string match header. example, validation '\"abc\" = \"xyz\"', HTTP requests must header named abc (case-insensitive) value xyz (case-sensitive). request matching header, httpuv give 403 Forbidden response. character(0) (default), validation check performed.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a staticPath object — staticPath","text":"excludeStaticPath function tells application ignore particular path static serving. useful want include path static serving (like \"/\") exclude subdirectory (like \"/dynamic\") subdirectory always passed R code handling requests. excludeStaticPath can used directories; can also exclude specific files.","code":""},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPathOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Create options for static paths — staticPathOptions","title":"Create options for static paths — staticPathOptions","text":"Create options static paths","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPathOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create options for static paths — staticPathOptions","text":"","code":"staticPathOptions(   indexhtml = TRUE,   fallthrough = FALSE,   html_charset = \"utf-8\",   headers = list(),   validation = character(0),   exclude = FALSE )"},{"path":"https://rstudio.github.io/httpuv/dev/reference/staticPathOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create options for static paths — staticPathOptions","text":"indexhtml index.html file present, served client requests static path subdirectory? fallthrough default value, FALSE, request made file exist, httpuv immediately send 404 response background /O thread, without needing call back main R thread. offers best performance. value TRUE, instead sending 404 response, httpuv call application's call function, allow handle request. html_charset HTML files served, value provided charset Content-Type header. example, default value, \"utf-8\", header Content-Type: text/html; charset=utf-8. \"\" used, charset added Content-Type header. headers Additional headers values included response. validation optional validation pattern. Presently, type validation supported exact string match header. example, validation '\"abc\" = \"xyz\"', HTTP requests must header named abc (case-insensitive) value xyz (case-sensitive). request matching header, httpuv give 403 Forbidden response. character(0) (default), validation check performed. exclude path excluded static serving? (used internally, excludeStaticPath().)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopAllServers.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop all servers — stopAllServers","title":"Stop all servers — stopAllServers","text":"stop applications created startServer() startPipeServer().","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopAllServers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop all servers — stopAllServers","text":"","code":"stopAllServers()"},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopDaemonizedServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop a running daemonized server in Unix environments (deprecated) — stopDaemonizedServer","title":"Stop a running daemonized server in Unix environments (deprecated) — stopDaemonizedServer","text":"function removed future release httpuv. Instead, use stopServer().","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopDaemonizedServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop a running daemonized server in Unix environments (deprecated) — stopDaemonizedServer","text":"","code":"stopDaemonizedServer(server)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopDaemonizedServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop a running daemonized server in Unix environments (deprecated) — stopDaemonizedServer","text":"server server object previously returned startServer() startPipeServer().","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop a server — stopServer","title":"Stop a server — stopServer","text":"Given server object returned previous invocation startServer() startPipeServer(), closes open connections server unbinds port.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop a server — stopServer","text":"","code":"stopServer(server)"},{"path":"https://rstudio.github.io/httpuv/dev/reference/stopServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop a server — stopServer","text":"server server object previously returned startServer() startPipeServer().","code":""},{"path":[]},{"path":[]},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1616","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.16","title":"httpuv 1.6.16","text":"CRAN release: 2025-04-16 Added mime type entry .wasm files, served application/wasm. (#407) Updated mime lookup table using mime R package 0.13. (#408) Avoid time-sensitive tests CRAN. (#412)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1615","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.15","title":"httpuv 1.6.15","text":"CRAN release: 2024-03-26 runStaticServer() longer fails browse = TRUE utils::browseURL() unable open server. (#395) Improved testing runStaticServer() accurately test runStaticServer() throws error requested port available FreeBSD. (#396)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1614","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.14","title":"httpuv 1.6.14","text":"CRAN release: 2024-01-26 Updated Makevars.ucrt upcoming release Rtools (thanks Tomas Kalibera). Fixed linking zlib macOS (thanks @jeroen). (#387)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1613","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.13","title":"httpuv 1.6.13","text":"CRAN release: 2023-12-06 Closed #388: Fix R CMD check warning re error() format strings (r-devel). (#389)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1612","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.12","title":"httpuv 1.6.12","text":"CRAN release: 2023-10-23 New runStaticServer() provides convenient interface serving directory static files. (#380) Remove workaround support shiny older version 1.0.6 (#378)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1611","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.11","title":"httpuv 1.6.11","text":"CRAN release: 2023-05-11 Fix race condition introduced 1.6.10. (#363) Hygiene metadata improvements requested CRAN. (#366, #369, #370)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1610","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.10","title":"httpuv 1.6.10","text":"CRAN release: 2023-05-08 WebSocket connections now send Ping frames client every 20 seconds. intended serve keepalive proxies might sitting front us; don’t pay attention whether Pong response received timely manner. (#359)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-169","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.9","title":"httpuv 1.6.9","text":"CRAN release: 2023-02-14 Fixed #354: incorrect method called clear vector. (#355) src/Makevars file longer sets CXX_STD=CXX11, DESCRIPTION file longer lists SystemRequirements: C++11, newer R versions always support C++11. (#356, #357)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-168","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.8","title":"httpuv 1.6.8","text":"CRAN release: 2023-01-12 Fixed #351: race condition cause httpuv crash starting background thread /O. (#352)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-167","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.7","title":"httpuv 1.6.7","text":"CRAN release: 2022-12-14 Fixed rstudio/shiny#3741: TZ environment variable get unset cases. (#346) Closed #302: Fixed potential thread-safety issues timegm2 implementation. (#346)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-166","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.6","title":"httpuv 1.6.6","text":"CRAN release: 2022-09-08 Update docs CRAN (#343) Updated libuv 1.43.0. (#328) Fixed #336: encodeURI() encodeURIComponent() printed space instead leading zero, \"% \" instead \"%0A\". (#337)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-165","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.5","title":"httpuv 1.6.5","text":"CRAN release: 2022-01-04 Added support R Windows UCRT. (#324) using system-wide copy libuv, httpuv now compile using system-wide headers libuv, instead local copy libuv headers. (#327)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-164","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.4","title":"httpuv 1.6.4","text":"CRAN release: 2021-12-14 Added zlib SystemRequirements DESCRIPTION file. (#315) Closed #280: Fix builds Alpine Linux (versions automake >1.16.1). (#319)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-163","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.3","title":"httpuv 1.6.3","text":"CRAN release: 2021-09-09 Increased required version Rcpp 1.0.7, work around incompatibility Rcpp 1.0.6 packages compiled Rcpp 1.0.7.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-162","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.2","title":"httpuv 1.6.2","text":"CRAN release: 2021-08-18 Fixed #282: startPipeServer() failed “invalid argument” error update libuv 1.37.0. (#283) Fixed #303: Don’t return Content-Length header HTTP status “101 Switching Protocols”. (#305) Added support gzip-compressed HTTP responses. (#305)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-161","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.1","title":"httpuv 1.6.1","text":"CRAN release: 2021-05-07 timegm() function non-standard GNU extension, replaced internal timegm2() function. (#300)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-160","dir":"Changelog","previous_headings":"","what":"httpuv 1.6.0","title":"httpuv 1.6.0","text":"CRAN release: 2021-04-23 Remove BH dependency. httpuv now requires compiler supports C++11. (#297)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-155","dir":"Changelog","previous_headings":"","what":"httpuv 1.5.5","title":"httpuv 1.5.5","text":"CRAN release: 2021-01-13 Fix SHA1 calculation, thus WebSocket server handshakes, big-endian systems. (#284) Fixed #195: Responses required headers named list. Now can also NULL, empty unnamed list, can unset. (#289) Allow responses omit body (set NULL) avoid sending body setting Content-Length header. intended use HTTP 204/304 responses. (#288)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-154","dir":"Changelog","previous_headings":"","what":"httpuv 1.5.4","title":"httpuv 1.5.4","text":"CRAN release: 2020-06-06 Fixed #275: Large HTTP request headers get truncated spanned one TCP message. (#277) Fixed build Solaris. (#271) Fixed test incorrect logic. (#272)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1531","dir":"Changelog","previous_headings":"","what":"httpuv 1.5.3.1","title":"httpuv 1.5.3.1","text":"CRAN release: 2020-05-26 Updated libuv version 1.37.0. (#266) Fixed #204: UBSAN builds R, warnings unaligned memory access. (#246) Avoid creating new Rook error stream object request. improve performance. (#245) Resolved #247: httpuv longer returns HTTP 400 code static files “Content-Length” header 0. Content-Length header inserted proxies even messages without payloads. (#248) Resolved #253: Setting FRAMEWORK environment variable break compilation. change removes dependency variable. (#254)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-152","dir":"Changelog","previous_headings":"","what":"httpuv 1.5.2","title":"httpuv 1.5.2","text":"CRAN release: 2019-09-11 static file-serving code path, httpuv previously looked Connection: upgrade header; found header, try serve static file, instead forward HTTP request R code path. However, proxies configured always set header, even connection actually meant upgraded. Now, instead looking Connection: upgrade header, httpuv looks presence Upgrade header (value), robust incorrectly-configured proxies. (#215) Fixed handling messages without payloads: (#219) Fixed #224: Static file serving Windows work correctly path contained non-ASCII characters. (#227) Resolved #194, #233: Added quiet option startServer, suppresses startup error messages normally printed console (can’t intercepted capture.output()). (#234) Added new function randomPort(), returns random available port listening . (#234) Added new (unexported) function logLevel(), controlling debugging information printed console. Previously, httpuv occasionally printed messages like ERROR: [uv_write] broken pipe ERROR: [uv_write] bad file descriptor default. happened server tried write pipe already closed, situation harmful, already handled correctly. Now messages printed log level set INFO DEBUG. (#223) application’s $call() method missing, now give 404 response instead 500 response. (#237) Disallowed backslash static path, prevent path traversal attacks. (#235) Static file serving Windows fail multiple requests accessed file simultaneously. (#239)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-151","dir":"Changelog","previous_headings":"","what":"httpuv 1.5.1","title":"httpuv 1.5.1","text":"CRAN release: 2019-04-05 Fixed issues compilers didn’t support C++11, notably RHEL Centos 6. (#210) Fixed #208: cases, race condition cause R process exit starting new server. (#211) Updated libuv 1.27.0. fixed fixed #213: Valgrind reported error pointer pointing uninitialized memory. (#214)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-150","dir":"Changelog","previous_headings":"","what":"httpuv 1.5.0","title":"httpuv 1.5.0","text":"CRAN release: 2019-03-15 Added support serving static files background /O thread. Files can now served filesystem without involving main R thread, means operations won’t block blocked code runs main R thread. (#177) Running httpuv applications now represented R6 objects class WebServer PipeServer. objects methods query update application. (#177) Converted existing reference classes (InputStream, NullInputStream, ErrorStream, AppWrapper, WebSocket) R6 classes. (#178) Fixed #168: SIGPIPE signal httpuv background thread cause process quit. can happen instances server heavy load. (#169) Fixed #122: decodeURI() decodeURIComponent() previously returned strings encoded system’s native encoding; now return UTF-8 encoded strings. (#185, #192) encodeURI() encodeURIComponent(), now convert inputs UTF-8 URL-encoding. (#192) encodeURI(), encodeURIComponent(), decodeURI(), decodeURIComponent() now handle NAs correctly. (#192) service() now executes single later callback, rather eligible callbacks. gives callers opportunities perform housekeeping multiple expensive callbacks queue . (#176) Fixed #173: source code now compiled -DSTRICT_R_HEADERS, eliminates need undefine Realloc Free macros. Updated libuv 1.23.1. (#174)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1451","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.5.1","title":"httpuv 1.4.5.1","text":"CRAN release: 2018-12-18 Moved C_VISIBILITY PKG_CPPFLAGS PKG_CFLAGS, added CXX_VISIBILITY PKG_CXXFLAGS, requested CRAN maintainers.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-145","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.5","title":"httpuv 1.4.5","text":"CRAN release: 2018-07-19 Fixed #161: HTTP connection get upgraded WebSocket early, sometimes resulted closed connections. (#162)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1442","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.4.2","title":"httpuv 1.4.4.2","text":"CRAN release: 2018-07-02 Changed compiler flags work gcc 8.10 Windows, httpuv build new versions Rtools. (#160)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1441","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.4.1","title":"httpuv 1.4.4.1","text":"CRAN release: 2018-06-18 Remove _GLIBCXX_ASSERTIONS compile flag, caused CRAN checks fail gcc 7.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-144","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.4","title":"httpuv 1.4.4","text":"Fixed #144: closing handle, make sure already closing. (#145) Exported ipFamily() function, tests whether string represents IPv4 address, IPv6 address, neither. (#142) Templated C++ code format <B<C>> changed <B<C> >. Allowing consecutive >> feature C++11. httpuv now compiled _GLIBCXX_ASSERTIONS, help catch bugs. (#137) Rook req environment now includes item req$HEADERS, named character vector request headers. (#143) Fixed #101: server creation fails, report reason . (#146, #149) Fixed #147: Santizer complained starting app startPipeServer failed app start. (#149) Fixed #150, #151: platforms, httpuv fail install zip file R’s unzip() function preserve executable permission src/libuv/configure. (#152) Worked around issue Shiny apps couldn’t viewed launched RStudio Server using Firefox. (#153)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-143","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.3","title":"httpuv 1.4.3","text":"CRAN release: 2018-05-10 Fixed #127: Compilation failed platforms NULL used instead Rcpp::List. (#131) Fixed #133: Assertion failures running Fedora 28. (#136) Fixed #134: Sanitizer complains starting app failed app start. (#138)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-142","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.2","title":"httpuv 1.4.2","text":"CRAN release: 2018-05-03 Fixed #126: Makevars.win file line spaces instead tab. caused problems installing --clean flag. Fixed #128: possible rare cases segfault occur httpuv tried close connection twice. (#129)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-141","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.1","title":"httpuv 1.4.1","text":"CRAN release: 2018-04-21 Addressed #123: service() now returns TRUE. Fixed #124: CRAN build machines, build failing issues timestamps input output files autotools libuv/.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-140","dir":"Changelog","previous_headings":"","what":"httpuv 1.4.0","title":"httpuv 1.4.0","text":"CRAN release: 2018-04-19 Changed license GPL 3 GPL >= 2. (#109) Added IPv6 support. (#115) httpuv now /O background thread, allow much better performance load. (#106) httpuv can now handle request callbacks asynchronously. (#80, (#97)) Fixed #72: httpuv previously close connections Connection: close header, HTTP 1.0 (without Connection: keep-alive). (#99) Fixed #71: cases, compiling httpuv use system copies library headers, use local copies libraries linking. (#121) Let Rcpp handle symbol registration. (#85) Hide internal symbols shared library supported platforms. reduces risk conflicts packages bundling libuv. (#85) Fixed #86: encodeURI() gave incorrect output non-ASCII characters. (#87) Fixed #49: information shared across separate requests. Upgraded libuv 1.15.0. (#91) Upgraded http-parser 2.7.1. (#93)","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-135","dir":"Changelog","previous_headings":"","what":"httpuv 1.3.5","title":"httpuv 1.3.5","text":"CRAN release: 2017-07-04 Added function getRNGState.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-133","dir":"Changelog","previous_headings":"","what":"httpuv 1.3.3","title":"httpuv 1.3.3","text":"CRAN release: 2015-08-04 Error messages now sent UTF-8. httpuv longer adds Content-Length header one already provided. Shiny issue #876.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-132","dir":"Changelog","previous_headings":"","what":"httpuv 1.3.2","title":"httpuv 1.3.2","text":"CRAN release: 2014-10-23 Add encodeURI, encodeURIComponent, decodeURI, decodeURIComponent functions. Compatibility Rook middleware reference classes.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-131","dir":"Changelog","previous_headings":"","what":"httpuv 1.3.1","title":"httpuv 1.3.1","text":"Fix bug websocket headers split multiple packets cause payload parsed incorrectly.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-130","dir":"Changelog","previous_headings":"","what":"httpuv 1.3.0","title":"httpuv 1.3.0","text":"CRAN release: 2014-04-04 Add experimental support running httpuv servers background (see ?startDaemonizedServer ?stopDaemonizedServer). Many thanks Héctor Corrada Bravo contribution!","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-123","dir":"Changelog","previous_headings":"","what":"httpuv 1.2.3","title":"httpuv 1.2.3","text":"CRAN release: 2014-02-19 Require Rcpp 0.11.0. absence requirement made easy Windows Mac users Rcpp 0.10 already installed grab httpuv 1.2.2 binaries CRAN, built Rcpp 0.11, causing bad crashes due Rcpp’s linkage changes.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-122","dir":"Changelog","previous_headings":"","what":"httpuv 1.2.2","title":"httpuv 1.2.2","text":"CRAN release: 2014-01-31 Export base64 encoding function rawToBase64. Compatibility work Rcpp 0.11.0.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-121","dir":"Changelog","previous_headings":"","what":"httpuv 1.2.1","title":"httpuv 1.2.1","text":"CRAN release: 2013-12-07 Solaris 10 compatibility fixes (courtesy Dr. Brian Ripley).","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-120","dir":"Changelog","previous_headings":"","what":"httpuv 1.2.0","title":"httpuv 1.2.0","text":"CRAN release: 2013-10-14 Fix IE10 websocket handshake failure. Implement hixie-76 version WebSocket protocol, Safari 4 QtWebKit.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-110","dir":"Changelog","previous_headings":"","what":"httpuv 1.1.0","title":"httpuv 1.1.0","text":"CRAN release: 2013-08-22 Fix issue #8: Bug concurrent uploads. Add interrupt() function stopping runloop. Add REMOTE_ADDR REMOTE_PORT request environment. Switch git submodules git subtree; much easier installation development builds. Upgrade libuv v0.10.13. Fix issue #13: Segfault successful retry server creation.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1063","dir":"Changelog","previous_headings":"","what":"httpuv 1.0.6.3","title":"httpuv 1.0.6.3","text":"CRAN release: 2013-06-01 Greatly improved stability heavy load ignoring SIGPIPE.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1062","dir":"Changelog","previous_headings":"","what":"httpuv 1.0.6.2","title":"httpuv 1.0.6.2","text":"Work properly body=c(file=\"foo\"). Previously worked body list, character vector. R CMD INSTALL git submodule update --init necessary. onHeaders() callback returned body, httpuv properly short-circuiting request. Ignore SIGPIPE permanently. still causing crashes heavy real-world traffic.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-1061","dir":"Changelog","previous_headings":"","what":"httpuv 1.0.6.1","title":"httpuv 1.0.6.1","text":"Make request available websocket object.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-106","dir":"Changelog","previous_headings":"","what":"httpuv 1.0.6","title":"httpuv 1.0.6","text":"Support listening pipes (Unix domain sockets tested, Windows named pipes tested may work). Fix crash CentOS 6.4 due weird interaction OpenSSL.","code":""},{"path":"https://rstudio.github.io/httpuv/dev/news/index.html","id":"httpuv-105","dir":"Changelog","previous_headings":"","what":"httpuv 1.0.5","title":"httpuv 1.0.5","text":"CRAN release: 2013-03-11 Initial release.","code":""}]
