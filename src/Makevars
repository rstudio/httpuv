## Use the R_HOME indirection to support installations of multiple R version

# Use C++11 if available
CXX_STD=CXX11

UNAME := $(shell uname)

PKG_LIBS = ./libuv/.libs/libuv.a ./http-parser/http_parser.o ./sha1/sha1.o ./base64/base64.o -pthread

ifeq ($(UNAME), Darwin)
PKG_LIBS += -framework CoreServices
endif

ifeq ($(UNAME), SunOS)
PKG_LIBS += -lkstat -lsendfile -lsocket -lxnet
endif
ifeq ($(UNAME), FreeBSD)
PKG_LIBS += -lkvm
endif
ifeq ($(UNAME), OpenBSD)
PKG_LIBS += -lkvm
endif

PKG_CFLAGS = $(C_VISIBILITY) -DSTRICT_R_HEADERS
PKG_CXXFLAGS = $(CXX_VISIBILITY) -DSTRICT_R_HEADERS
PKG_CPPFLAGS = -Ilibuv/include -pthread

# To avoid spurious warnings from `R CMD check --as-cran`, about compiler
# warning flags like -Werror.
CONFIGURE_FLAGS="--quiet"

#### Debugging flags ####
# Uncomment to enable thread assertions
# PKG_CPPFLAGS += -DDEBUG_THREAD -UNDEBUG

#### Other flags ####
# Uncomment to suppress lots of warnings on Fedora 28
# PKG_CPPFLAGS += -Wno-deprecated-declarations -Wno-parentheses
# Fedora 28 defines _GLIBCXX_ASSERTIONS, so we better define it everywhere
# to catch issues earlier.
# jcheng 2018-06-18: Disabling _GLIBCXX_ASSERTIONS for now, as it causes
#   CRAN to flag the package as using abort and printf.
# PKG_CPPFLAGS += -D_GLIBCXX_ASSERTIONS


$(SHLIB): libuv/.libs/libuv.a http-parser/http_parser.o sha1/sha1.o base64/base64.o

# We needed to rename lt~obsolete.m4 because the name causes problems with R
# CMD check. Here we rename it back.
libuv/m4/lt~obsolete.m4: libuv/m4/lt_obsolete.m4
	cp -p -f libuv/m4/lt_obsolete.m4 libuv/m4/lt~obsolete.m4

# Run ./configure.
# We also need to make sure configure is executable, because on some platforms,
# calling unzip() in R does not preserve the executable bit.
#
libuv/Makefile: libuv/m4/lt~obsolete.m4
	(cd libuv \
		&& chmod +x configure \
		&& CC="$(CC)" CFLAGS="$(CFLAGS) $(CPICFLAGS) $(C_VISIBILITY)" AR="$(AR)" RANLIB="$(RANLIB)" LDFLAGS="$(LDFLAGS)" ./configure $(CONFIGURE_FLAGS))

libuv/.libs/libuv.a: libuv/Makefile
	$(MAKE) --directory=libuv \
		HAVE_DTRACE=0

clean:
	$(MAKE) --directory=libuv distclean
